onEvent("ponder.registry", event => {

    event.create("kubejs:alchemy", "kubejs:alchemical_laser")
        .scene("alchemy_setup", "サーマルアルケミー・インストール", "kubejs:laser_alchemy", (scene, util) => {
            scene.configureBasePlate(0, 0, 5);
            scene.showBasePlate();
            scene.idle(10)

            let largeCog = util.select().position(5, 0, 2)
            let deployerSingle = util.select().position(4, 1, 3)
            let smallCog = util.select().position(4, 1, 2)
            let lamp = util.select().fromTo(4, 1, 4, 4, 2, 4)
            let deployer = util.select().fromTo(4, 1, 2, 4, 2, 4)
            let machine = util.select().position(2, 1, 3)
            let light = util.select().position(2, 1, 2)

            scene.world().showSection(machine, Facing.down)
            scene.idle(15)

            scene.overlay().showText(50)
                .text("まずはインバー機（メカニズムフレーム）から。")
                .pointAt(util.vector().topOf(2, 1, 3))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(60)

            scene.world().showSection(light, Facing.south)
            scene.overlay().showText(50)
                .text("任意の色のケージに入れたランプに接続する。")
                .pointAt(util.vector().centerOf(2, 1, 2))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(30)

            scene.world().showSection(util.select().position(1, 1, 2), Facing.north)
            scene.idle(25)

            scene.world().toggleRedstonePower(util.select().position(1, 1, 2))
            scene.effects().indicateRedstone(util.grid().at(1, 1, 2))
            scene.world().setBlock(util.grid().at(2, 1, 2), util.getDefaultState("kubejs:ponder_laser_lamp_on"), false)
            scene.idle(15)

            scene.overlay().showText(40)
                .text("ランプが点灯していることを確認しよう。")
                .colored(PonderPalette.GREEN)
                .pointAt(util.vector().centerOf(2, 1, 2))
                .placeNearTarget()
            scene.idle(50)

            scene.world().setKineticSpeed(deployer, 0)
            scene.world().showSection(deployerSingle, Facing.down)
            scene.idle(15)

            scene.overlay().showText(60)
                .text("アクティベーターをインバー機（機構フレーム）の方向に入れる。")
                .pointAt(util.vector().topOf(4, 1, 3))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(70)
            scene.overlay().showControls(new PonderInput(util.vector().blockSurface(util.grid().at(4, 1, 3), Facing.west), PonderPointing.RIGHT)
                .rightClick().withWrench(),
                50)
            scene.idle(8)
            scene.world().modifyTileNBT(deployerSingle, java("com.simibubi.create.content.contraptions.components.deployer.DeployerTileEntity"), nbt => nbt.func_74778_a("Mode", "PUNCH"));
            scene.overlay().showText(50)
                .text("スパナレンチを使ってブレークモードに切り替える。")
                .colored(PonderPalette.GREEN)
                .pointAt(util.vector().topOf(4, 1, 3))
                .placeNearTarget()
            scene.idle(20)
            scene.world().showSection(largeCog, Facing.up)
            scene.world().showSection(smallCog, Facing.down)
            scene.idle(5)
            scene.world().showSection(lamp, Facing.down)
            scene.idle(5)
            scene.world().setKineticSpeed(deployer, 64)
            scene.idle(60)
            scene.overlay().showText(50)
                .attachKeyFrame()
                .text("アクティベーターが作動するたびに......。")
                .pointAt(util.vector().topOf(4, 1, 3))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()

            scene.idle(30)
            scene.world().toggleRedstonePower(lamp)
            scene.idle(3)
            scene.world().moveDeployer(util.grid().at(4, 1, 3), 1, 25);
            scene.idle(15)
            scene.idle(10)

            scene.effects().indicateSuccess(util.grid().at(2, 1, 2))
            scene.effects().indicateSuccess(util.grid().at(2, 1, 1))
            scene.effects().indicateSuccess(util.grid().at(2, 1, 0))
            scene.effects().indicateSuccess(util.grid().at(2, 1, -1))

            scene.idle(3)
            scene.world().moveDeployer(util.grid().at(4, 1, 3), -1, 25);
            scene.idle(10)
            scene.world().toggleRedstonePower(lamp)
            // scene.effects().indicateRedstone(util.grid().at(4, 2, 4))

            scene.overlay().showText(50)
                .text("...レーザーランプは高電荷ビームを発する")
                .colored(PonderPalette.GREEN)
                .pointAt(util.vector().centerOf(2, 1, 2))
                .placeNearTarget()
            scene.idle(60)

            scene.world().showSection(util.select().fromTo(1, 1, 0, 3, 1, 0), Facing.west)
            scene.idle(5)
            let HopperMinecart = java("net.minecraft.entity.item.minecart.HopperMinecartEntity")
            let cartHandle = scene.special().createCart(util.vector().topOf(2, 0, 0), 0, (w, x, y, z) => new HopperMinecart(w, x, y, z))
            scene.idle(20)
            scene.overlay().showText(80)
                .attachKeyFrame()
                .text("ビームに挟まれたファンネル・キャリッジが、その中のアイテムを処理する")
                .pointAt(util.vector().centerOf(2, 1, 0))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(70)

            scene.overlay().showControls(new PonderInput(util.vector().centerOf(2, 1, 0), PonderPointing.DOWN)
                .withItem("thermal:flux_magnet"),
                40)
            scene.idle(5)
            scene.overlay().showControls(new PonderInput(util.vector().centerOf(2, 1, 0), PonderPointing.UP)
                .withItem("minecraft:basalt"),
                35)
            scene.idle(30)

            scene.world().toggleRedstonePower(lamp)
            scene.idle(3)
            scene.world().moveDeployer(util.grid().at(4, 1, 3), 1, 25);
            scene.idle(15)
            scene.idle(10)

            scene.effects().indicateSuccess(util.grid().at(2, 1, 2))
            scene.effects().indicateSuccess(util.grid().at(2, 1, 1))
            scene.effects().indicateSuccess(util.grid().at(2, 1, 0))
            scene.effects().indicateSuccess(util.grid().at(2, 1, -1))

            scene.idle(3)
            scene.world().moveDeployer(util.grid().at(4, 1, 3), -1, 25);
            scene.idle(10)

            scene.overlay().showControls(new PonderInput(util.vector().centerOf(2, 1, 0), PonderPointing.DOWN)
                .withItem("thermal:flux_magnet"),
                40)
            scene.idle(5)
            scene.overlay().showControls(new PonderInput(util.vector().centerOf(2, 1, 0), PonderPointing.UP)
                .withItem("thermal:basalz_rod"),
                35)

            // scene.effects().indicateRedstone(util.grid().at(4, 2, 4))
            scene.world().toggleRedstonePower(lamp)
        })

    event.create("kubejs:rocket", "advancedrocketry:guidancecomputer")
        .scene("rocket_setup", "ロケット打ち上げ入門", "kubejs:rocket_scene", (scene, util) => {
            scene.configureBasePlate(0, 0, 7);
            scene.scaleSceneView(.8);
            scene.setSceneOffsetY(-1);
            scene.showBasePlate();
            scene.idle(10)

            let pad = util.select().fromTo(1, 1, 1, 5, 1, 5)
            let tower = util.select().fromTo(0, 1, 4, 0, 6, 4)
            let assembler = util.select().position(3, 2, 0)
            let fuelingstation = util.select().position(4, 2, 0)
            let powercable = util.select().fromTo(1, 1, 0, 7, 1, 0)
            let powercable2 = util.select().fromTo(7, 0, 1, 7, 1, 1)

            let rocket1 = util.select().fromTo(2, 2, 2, 4, 2, 4)
            let rocket21 = util.select().fromTo(2, 3, 3, 4, 3, 4)
            let rocket22 = util.select().position(2, 4, 3)
            let rocket23 = util.select().position(4, 4, 3)
            let rocket3 = util.select().position(3, 3, 2)
            let rocket4 = util.select().position(3, 4, 3)
            let rocket51 = util.select().position(3, 4, 2)
            let rocket52 = util.select().position(3, 4, 4)
            let rocket53 = util.select().fromTo(2, 5, 2, 4, 6, 4)

            scene.world().showSection(pad, Facing.down)
            scene.idle(10)
            scene.overlay().showText(40)
                .text("発射台の配置から始めよう")
                .pointAt(util.vector().topOf(1, 1, 2))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(50)
            scene.world().showSection(tower, Facing.east)
            scene.idle(10)
            scene.overlay().showText(40)
                .text("打ち上げタワーを側面に取り付ける")
                .pointAt(util.vector().centerOf(0, 1, 4))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(50)
            scene.world().showSection(assembler, Facing.down)
            scene.idle(10)
            scene.overlay().showText(80)
                .text("ミサイルコレクターを周囲の1ブロック上に配置する。")
                .pointAt(util.vector().blockSurface(util.grid().at(3, 2, 0), Facing.west))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(70)
            scene.overlay().showOutline(PonderPalette.GREEN, Facing.down, util.select().fromTo(1, 2, 1, 5, 6, 5), 80)
            scene.idle(15)
            scene.overlay().showText(70)
                .attachKeyFrame()
                .text("ロケットはこの境界の中で作ることができる。")
                .colored(PonderPalette.GREEN)
                .pointAt(util.vector().topOf(1, 1, 2))
                .placeNearTarget()
            scene.idle(80)

            scene.world().showSection(rocket1, Facing.down)
            scene.idle(5)
            scene.overlay().showText(20)
                .text("アクセラレーターを追加しよう、")
                .pointAt(util.vector().blockSurface(util.grid().at(2, 2, 3), Facing.west))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(20)
            scene.world().showSection(rocket21, Facing.down)
            scene.world().showSection(rocket22, Facing.down)
            scene.world().showSection(rocket23, Facing.down)
            scene.idle(5)
            scene.overlay().showText(20)
                .text("燃料タンク")
                .pointAt(util.vector().blockSurface(util.grid().at(2, 4, 3), Facing.west))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(20)
            scene.world().showSection(rocket3, Facing.south)
            scene.idle(5)
            scene.overlay().showText(20)
                .text("トリップコンピューター、")
                .pointAt(util.vector().blockSurface(util.grid().at(3, 3, 2), Facing.west))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(20)
            scene.world().showSection(rocket4, Facing.down)
            scene.idle(5)
            scene.overlay().showText(20)
                .text("ロケットの椅子")
                .pointAt(util.vector().centerOf(3, 4, 3))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(20)
            scene.world().showSection(rocket51, Facing.down)
            scene.world().showSection(rocket52, Facing.down)
            scene.world().showSection(rocket53, Facing.down)
            scene.idle(5)
            scene.overlay().showText(50)
                .text("などのブロックが飾られている。")
                .pointAt(util.vector().blockSurface(util.grid().at(3, 5, 2), Facing.west))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()

            scene.idle(60)
            scene.world().showSection(fuelingstation, Facing.down)
            scene.idle(10)
            scene.overlay().showText(60)
                .attachKeyFrame()
                .text("コレクターの近くに給油所を......。")
                .pointAt(util.vector().blockSurface(util.grid().at(4, 2, 0), Facing.up))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(50)
            scene.world().showSection(powercable, Facing.south)
            scene.world().showSection(powercable2, Facing.south)
            scene.idle(10)
            scene.effects().indicateRedstone(util.grid().at(4, 2, 0))
            scene.effects().indicateRedstone(util.grid().at(3, 2, 0))
            scene.idle(10)
            scene.overlay().showText(60)
                .text("...そして両車にパワーを与える。")
                .pointAt(util.vector().centerOf(2, 1, 0))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(80)

            scene.overlay().showText(60)
                .attachKeyFrame()
                .text("アセンブラのユーザー・インターフェースを開き、ロケットを「スキャン」する。")
                .pointAt(util.vector().blockSurface(util.grid().at(3, 2, 0), Facing.west))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(70)
            scene.overlay().showText(60)
                .text("ロケットが有効であると判断されたら、「Build」を押す。")
                .pointAt(util.vector().blockSurface(util.grid().at(3, 2, 0), Facing.west))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(70)
            scene.overlay().showText(80)
                .text("(短時間の画面フリーズはご心配なく。ロケット改造は開発の初期段階です)。")
                .pointAt(util.vector().blockSurface(util.grid().at(3, 2, 0), Facing.west))
                .colored(PonderPalette.GREEN)
                .placeNearTarget()
            scene.idle(90)

            scene.effects().indicateSuccess(util.grid().at(3, 2, 0))
            scene.idle(5)
            scene.overlay().showControls(new PonderInput(util.vector().centerOf(3, 4, 3), PonderPointing.RIGHT)
                .rightClick().whileSneaking(),
                50)
            scene.idle(8)
            scene.overlay().showText(70)
                .attachKeyFrame()
                .text("ロケットが組み上がったら、PCMをシフターで操作し、インターフェイスを開く。")
                .pointAt(util.vector().centerOf(3, 4, 3))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(80)
            scene.overlay().showControls(new PonderInput(util.vector().centerOf(4, 4, 3), PonderPointing.RIGHT)
                .withItem("advancedrocketry:planet_id_chip"),
                50)
            scene.idle(8)
            scene.overlay().showText(70)
                .text("UIの中に、惑星のIDチップを入れることができる。")
                .colored(PonderPalette.GREEN)
                .pointAt(util.vector().centerOf(3, 4, 3))
                .placeNearTarget()
            scene.idle(80)

            scene.overlay().showText(70)
                .attachKeyFrame()
                .text("ロケットに燃料を充填するには、まずロケット結合装置が必要です。")
                .pointAt(util.vector().blockSurface(util.grid().at(4, 2, 0), Facing.up))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(80)
            scene.overlay().showControls(new PonderInput(util.vector().topOf(4, 2, 0), PonderPointing.DOWN)
                .withItem("libvulpes:linker").rightClick().whileSneaking(),
                20)
            scene.idle(15)
            scene.overlay().showControls(new PonderInput(util.vector().centerOf(4, 4, 3), PonderPointing.RIGHT)
                .withItem("libvulpes:linker").rightClick().whileSneaking(),
                20)
            scene.idle(8)
            scene.effects().indicateSuccess(util.grid().at(4, 2, 0))
            scene.idle(15)
            scene.overlay().showText(60)
                .attachKeyFrame()
                .text("PCMは、まず給油ステーションでシフトレバーを操作し、次にロケットでシフトレバーを操作する。")
                .pointAt(util.vector().blockSurface(util.grid().at(4, 2, 0), Facing.up))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(70)
            scene.overlay().showControls(new PonderInput(util.vector().topOf(4, 2, 0), PonderPointing.DOWN)
                .withItem("thermal:refined_fuel_bucket"),
                20)
            scene.idle(15)
            scene.overlay().showText(70)
                .text("ステーションに追加された燃料はすべてロケットに移される。")
                .pointAt(util.vector().blockSurface(util.grid().at(4, 2, 0), Facing.up))
                .colored(PonderPalette.WHITE)
                .placeNearTarget()
            scene.idle(50)
        })

})